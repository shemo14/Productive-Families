import React, { Component } from "react";import {View, Text, Image, TouchableOpacity, ImageBackground  , FlatList, Platform} from "react-native";import { Icon } from 'native-base'import styles from '../../assets/style'import {connect} from "react-redux";import i18n from "../../locale/i18n";import { deleteCart, editCart } from '../actions'class CartItem extends Component {	constructor(props){		super(props);		this.state={			count : this.props.item.quantity,		}	}	toggleFavorite (id){		this.setState({ isFav: ! this.state.isFav });		const token =  this.props.user ?  this.props.user.token : null;		this.props.favorite( this.props.lang, id  , token );	}	incrementCount(value) {		this.setState({count: this.state.count + 1});		// this.props.pushItem(this.props.item.cart_id, value + 1);		this.props.editCart(this.props.lang, this.props.providerId, this.props.item.cart_id, this.state.count + 1, this.props.user.token, this.props)	}	DecrementCount(value) {		if (this.state.count > 1){			this.setState({count: this.state.count - 1});			// this.props.pullItem(this.props.item.cart_id, value - 1);			this.props.editCart(this.props.lang, this.props.providerId, this.props.item.cart_id, this.state.count - 1, this.props.user.token, this.props)		}	}	deleteCart(cart_id) {		this.props.deleteCart(this.props.lang, this.props.providerId, cart_id, this.props.user.token, this.props)	}	componentWillReceiveProps(nextProps) {		this.setState({ count: nextProps.item.quantity });	}	render() {		return (			<View				style={[styles.position_R, styles.flex_45, {					marginTop: 25,					marginBottom: 25				}, styles.height_200, styles.marginHorizontal_10]}				// onPress     = {() => this.props.navigation.navigate('product', { id : item.id })}			>				<View style={[styles.lightOverlay, styles.Border]} />				<View style={[styles.bg_White, styles.Border]}>					<View style={[styles.rowGroup, styles.paddingHorizontal_5, styles.paddingVertical_5]}>						<View style={[styles.flex_80]}>							<Image style={[styles.Width_90, styles.height_100, styles.flexCenter]}								source={{uri: this.props.item.product_thumbnail}} resizeMode={'cover'}/>						</View>						<View style={[styles.flex_20, styles.flexCenter]}>							<TouchableOpacity								style={[styles.width_30, styles.height_30, styles.flexCenter, styles.bg_light_oran, styles.borderLightOran, styles.marginVertical_5]}								onPress={() => this.incrementCount()}							>								<Icon style={[styles.text_red, styles.textSize_18]} type="AntDesign" name='plus'/>							</TouchableOpacity>							<Text								style={[styles.textRegular, styles.text_red, styles.width_30, styles.height_30, styles.borderLightOran, styles.textCenter]}>								{this.state.count}							</Text>							<TouchableOpacity								style={[styles.width_30, styles.height_30, styles.flexCenter, styles.bg_light_oran, styles.borderLightOran, styles.marginVertical_5]}								onPress={() => this.DecrementCount()}							>								<Icon style={[styles.text_red, styles.textSize_18]} type="AntDesign" name='minus'/>							</TouchableOpacity>						</View>					</View>					<View style={[styles.overHidden, styles.paddingHorizontal_10, styles.marginVertical_5]}>						<Text							style={[styles.text_gray, styles.textSize_16, styles.textRegular, styles.Width_100, styles.textLeft]}>							{this.props.item.product_name}						</Text>						<Text							style={[styles.text_light_gray, styles.textSize_12, styles.textRegular, styles.Width_100, styles.textLeft]}>							{this.props.item.product_category} - {this.props.item.product_sub_category}						</Text>						<Text							style={[styles.text_red, styles.textSize_14, styles.textRegular, styles.SelfLeft, styles.textLeft, styles.borderText, styles.paddingHorizontal_5]}>							{Number(this.props.item.product_disount_price) * this.state.count} {i18n.t('RS')}						</Text>					</View>					<TouchableOpacity						style={[styles.width_40, styles.height_40, styles.flexCenter, styles.bg_red, styles.borderLightOran, styles.marginVertical_5, styles.position_A, styles.iconRemove]}						onPress={() => this.deleteCart(this.props.item.cart_id)}					>						<Icon style={[styles.text_White, styles.textSize_20]} type="AntDesign" name='close'/>					</TouchableOpacity>				</View>			</View>		);	}}const mapStateToProps = ({ lang, profile }) => {	return {		lang        : lang.lang,		user		: profile.user,	};};export default connect(mapStateToProps, { deleteCart, editCart })(CartItem);